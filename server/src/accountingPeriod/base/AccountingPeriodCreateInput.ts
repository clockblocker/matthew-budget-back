/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { TransactionCreateNestedManyWithoutAccountingPeriodsInput } from "./TransactionCreateNestedManyWithoutAccountingPeriodsInput";
import { AccountPeriodTypeWhereUniqueInput } from "../../accountPeriodType/base/AccountPeriodTypeWhereUniqueInput";
import { UserCreateNestedManyWithoutAccountingPeriodsInput } from "./UserCreateNestedManyWithoutAccountingPeriodsInput";
@InputType()
class AccountingPeriodCreateInput {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  end!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  start!: Date;

  @ApiProperty({
    required: false,
    type: () => TransactionCreateNestedManyWithoutAccountingPeriodsInput,
  })
  @ValidateNested()
  @Type(() => TransactionCreateNestedManyWithoutAccountingPeriodsInput)
  @IsOptional()
  @Field(() => TransactionCreateNestedManyWithoutAccountingPeriodsInput, {
    nullable: true,
  })
  transactions?: TransactionCreateNestedManyWithoutAccountingPeriodsInput;

  @ApiProperty({
    required: false,
    type: () => AccountPeriodTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountPeriodTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => AccountPeriodTypeWhereUniqueInput, {
    nullable: true,
  })
  typeId?: AccountPeriodTypeWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: () => UserCreateNestedManyWithoutAccountingPeriodsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutAccountingPeriodsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutAccountingPeriodsInput, {
    nullable: true,
  })
  users?: UserCreateNestedManyWithoutAccountingPeriodsInput;
}
export { AccountingPeriodCreateInput };
